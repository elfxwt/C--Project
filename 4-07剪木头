#include<iostream>
#include<vector>
#include<queue>
#include<functional>

using namespace std;
//优先级队列的建造，带权哈夫曼树的构建 默认是less
priority_queue <int,vector<int>,greater<int>> hftree;

int main()
{
	int n,l;
	cin >> n;
	for(int i = 1;i <= n;i++)
	{
		cin>>l;
		hftree.push(l);
	}
	int money = 0;
	while(hftree.size() != 1)
	{
		int firl = hftree.top();//优先级最高的也是数列中最小的
		hftree.pop();
		int secl = hftree.top();
		hftree.pop();
		money += firl + secl;
		hftree.push(firl + secl);//两个节点合成的新节点继续算起优先级
	}
	cout<<money<<endl;
	return 0;
}
